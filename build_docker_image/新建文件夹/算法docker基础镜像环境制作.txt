## 第一步： 宿主机中安装docker（必须要19.0以上版本） -- docker -v查看版本
    卸载旧版本： 
    apt-get autoremove docker docker-ce docker-engine docker.io containerd runc
    apt-get autoremove docker* 

    安装：
    apt-get update  （更新本地软件包索引）
    apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common （配置存储库）
    
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  （添加官方GPG密钥）
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"  （设置存储库类型，稳定版等）
    apt-get update
    apt-cache madison docker-ce  （查看支持的版本）
    apt-get install docker-ce docker-ce-cli containerd.io (最新稳定版，也可指定版本)
## 第二步： 从官方拉取相应版本的nvidia-docker -- docker pull nvidia/cuda:10.0-base-ubuntu16.04
## 第三步： 安装nvidia-docker插件（即nvidia-container-toolkit插件）-- ducker run --gpus all nvidia/cuda:9.0-base nvidia-smi 容器中能看到显卡即装成功
    安装公钥
    curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
    获取list
    curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu16.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
    更新
    sudo apt update
    安装nvidia-container-toolkit
    sudo apt install nvidia-container-toolkit
    重启
    sudo systemctl restart docker

## 第四步： 安装python和相关扩展/三方（注意相关三方库的版本）：
     apt-get update
     apt-get upgrade -y
     cd /var/lib/apt/lists/
     apt-get install -y python3.5
     apt-get install -y wget vim 
     wget  https://bootstrap.pypa.io/get-pip.py
     python3.5 get-pip.py 
     apt-get update
     apt-get install -y python3.5-dev
     apt-get install -y libglib2.0-0
     apt-get install -y python3.5-qt4
     rm -rf *

     pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/  numpy==1.17.0 supervisor==4.0.4
     pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/ torch==0.4.1 torchvision==0.2.1 
     pip install -i https://mirrors.aliyun.com/pypi/simple/ Pillow==6.1.0


## 第五步： 安装/编译TVM以及相关依赖：
    下载TVM源码：
    git clone --recursive https://github.com/apache/incubator-tvm tvm

    apt-get install cmake
    apt-get install gcc
    安装llvm:
    $ wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add -
    $ sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"
    $ sudo apt-get update
    $ sudo apt-get install -y clang-6.0
    安装其他依赖：
    apt-get install libedit-dev
    apt-get install libxml2-dev
    apt-get install build-essential
    apt-get install libtinfo-dev
    apt-get install zliblg-dev
    
    开始编译：
    cd tvm
    mkdir build
    cp cmake/config.cmake build
    vim build/config.cmake -- 
       修改：set(USE_CUDA OFF)  --> set(USE_CUDA ON)
       set(USE_LLVM /path/to/llvm/bin/llvm-config)
    cd build
    cmake ..
    make -j4
    vim ~/.bashrc --
       export TVM_HOME=/path/to/tvm
       export PYTHONPATH=$TVM_HOME/python:$TVM_HOME/topi/python:${PYTHONPATH}
    pip install --user numpy decorator attrs
    pip install --user tornado psutil xgboost
    pip install --user mypy orderedset antlr4-python3-runtime

    测试是否安装编译成功： 进入python3.5的shell环境，能import tvm则编译成功





    apt-get install gcc
    apt-get install g++
    apt-get install libssl-dev
    apt-get install libbz2-dev

